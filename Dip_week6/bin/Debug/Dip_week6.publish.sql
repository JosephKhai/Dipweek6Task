/*
Deployment script for Dip_week6

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar LoadTestData "false"
:setvar DatabaseName "Dip_week6"
:setvar DefaultFilePrefix "Dip_week6"
:setvar DefaultDataPath "C:\Users\Samuel Siampi\AppData\Local\Microsoft\VisualStudio\SSDT"
:setvar DefaultLogPath "C:\Users\Samuel Siampi\AppData\Local\Microsoft\VisualStudio\SSDT"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                CURSOR_DEFAULT LOCAL 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET PAGE_VERIFY NONE,
                DISABLE_BROKER 
            WITH ROLLBACK IMMEDIATE;
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367)) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
PRINT N'Rename refactoring operation with key ad8fd59f-644c-4745-b952-34db55b860a4 is skipped, element [dbo].[Account].[Id] (SqlSimpleColumn) will not be renamed to AcctNo';


GO
PRINT N'Rename refactoring operation with key 657ebbd8-1dae-4f9d-8e9e-3ebde5ad8a1f is skipped, element [dbo].[Log].[Id] (SqlSimpleColumn) will not be renamed to OrigAcct';


GO
PRINT N'Creating [dbo].[Account]...';


GO
CREATE TABLE [dbo].[Account] (
    [AcctNo]      INT           NOT NULL,
    [Fname]       NVARCHAR (50) NOT NULL,
    [Lname]       NVARCHAR (50) NOT NULL,
    [CreditLimit] MONEY         NOT NULL,
    [Balance]     MONEY         NOT NULL,
    PRIMARY KEY CLUSTERED ([AcctNo] ASC),
    CONSTRAINT [AK_Account_Column] UNIQUE NONCLUSTERED ([Fname] ASC, [Lname] ASC)
);


GO
PRINT N'Creating [dbo].[Log]...';


GO
CREATE TABLE [dbo].[Log] (
    [OrigAcct]    INT      NOT NULL,
    [LogDateTime] DATETIME NOT NULL,
    [RecAcct]     INT      NOT NULL,
    [Amount]      MONEY    NOT NULL,
    CONSTRAINT [PK_Log] PRIMARY KEY CLUSTERED ([OrigAcct] ASC, [LogDateTime] ASC)
);


GO
PRINT N'Creating [dbo].[FK_Log_ToTable]...';


GO
ALTER TABLE [dbo].[Log] WITH NOCHECK
    ADD CONSTRAINT [FK_Log_ToTable] FOREIGN KEY ([OrigAcct]) REFERENCES [dbo].[Account] ([AcctNo]);


GO
PRINT N'Creating [dbo].[FK_Log_ToTable_1]...';


GO
ALTER TABLE [dbo].[Log] WITH NOCHECK
    ADD CONSTRAINT [FK_Log_ToTable_1] FOREIGN KEY ([RecAcct]) REFERENCES [dbo].[Account] ([AcctNo]);


GO
PRINT N'Creating [dbo].[CK_Account_Column]...';


GO
ALTER TABLE [dbo].[Account] WITH NOCHECK
    ADD CONSTRAINT [CK_Account_Column] CHECK ([CreditLimit] < 0);


GO
PRINT N'Creating [dbo].[CK_Account_Column_1]...';


GO
ALTER TABLE [dbo].[Account] WITH NOCHECK
    ADD CONSTRAINT [CK_Account_Column_1] CHECK ([Balance] > [CreditLimit]);


GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'ad8fd59f-644c-4745-b952-34db55b860a4')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('ad8fd59f-644c-4745-b952-34db55b860a4')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '657ebbd8-1dae-4f9d-8e9e-3ebde5ad8a1f')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('657ebbd8-1dae-4f9d-8e9e-3ebde5ad8a1f')

GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[Log] WITH CHECK CHECK CONSTRAINT [FK_Log_ToTable];

ALTER TABLE [dbo].[Log] WITH CHECK CHECK CONSTRAINT [FK_Log_ToTable_1];

ALTER TABLE [dbo].[Account] WITH CHECK CHECK CONSTRAINT [CK_Account_Column];

ALTER TABLE [dbo].[Account] WITH CHECK CHECK CONSTRAINT [CK_Account_Column_1];


GO
PRINT N'Update complete.';


GO
